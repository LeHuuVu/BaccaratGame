[{"C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\index.js":"1","C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\App.js":"2","C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\Api.js":"3","C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\axios.js":"4"},{"size":275,"mtime":1635344178259,"results":"5","hashOfConfig":"6"},{"size":8481,"mtime":1635399050600,"results":"7","hashOfConfig":"6"},{"size":133,"mtime":1635338942519,"results":"8","hashOfConfig":"6"},{"size":855,"mtime":1635337664137,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"14wx9dg",{"filePath":"13","messages":"14","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\index.js",[],["21","22"],"C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\App.js",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44"],"import React, { useEffect, useState } from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'antd/dist/antd.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport cookies from 'axios/lib/helpers/cookies';\r\nimport { getResult, getPredict } from './Api';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nconst renderTime = ({ remainingTime }) => {\r\n  if (remainingTime === 0) {\r\n    return <div className=\"timer\">Too lale...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"value\">{remainingTime}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  // const [cards, setCards] = useState(['A', 'K', 'Q', '4', '5', '6']);\r\n  const [BankerCards, setBankerCards] = useState([]);\r\n  const [PlayerCards, setPlayerCards] = useState([]);\r\n  const [result, setResult] = useState('');\r\n  const [sugges, setSugges] = useState('');\r\n  const [tik, setTik] = useState(false);\r\n  const [play, setPlay] = useState(false);\r\n  const [wait, setWait] = useState(true);\r\n  const [score, setScore] = useState({\r\n    player: '0',\r\n    banker: '0',\r\n  });\r\n  const notify = async () => {\r\n    await getPredict()\r\n      .then((response) => {\r\n        toast.info(response.Predict, {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n        setSugges(response.Predict);\r\n        setTik(true);\r\n      })\r\n      .catch((error) => Error(error.toString()));\r\n  };\r\n  const handleClick = (value) => {\r\n    setTik(true);\r\n    setWait(true);\r\n    const Loading = setTimeout(async () => {\r\n      setWait(false);\r\n      if (play) {\r\n        await getResult()\r\n          .then((response) => {\r\n            setBankerCards(response.Banker_Cards);\r\n            setPlayerCards(response.Player_Cards);\r\n            setResult(response.Results);\r\n            setScore({\r\n              player: response.Player_Score,\r\n              banker: response.Banker_Score,\r\n            });\r\n            if(value === response.Results){\r\n              toast.error('you lose!!!', {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            }\r\n            else{\r\n              toast.success('you win!!!', {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            }\r\n          })\r\n          .catch((error) => Error(error.toString()));\r\n      }\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const Loading = setTimeout(() => {\r\n      setWait(false);\r\n    }, 3000);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div\r\n          style={\r\n            wait\r\n              ? {\r\n                  position: 'absolute',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  background: 'rgba(0, 0, 0, .5)',\r\n                  zIndex: '800',\r\n                  top: '0',\r\n                  left: '0',\r\n                }\r\n              : null\r\n          }\r\n          className=\"back_Gr\"\r\n        >\r\n          {' '}\r\n        </div>\r\n        {wait ? (\r\n          <div className=\"count-down\">\r\n            <div className=\"timer-wrapper\">\r\n              <CountdownCircleTimer\r\n                size={150}\r\n                isPlaying\r\n                duration={3}\r\n                colors={[['#004777', 0.33], ['#F7B801', 0.33], ['#A30000']]}\r\n                onComplete={() => [false, 1000]}\r\n              >\r\n                {renderTime}\r\n              </CountdownCircleTimer>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={2000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n        <div className=\"bcr-top\">\r\n          <div className=\"item\">\r\n            <div className=\"player\">PLAYER</div>\r\n            <div\r\n              style={{ color: 'rgb(117, 35, 35)', marginLeft: '5px' }}\r\n              className=\"score\"\r\n            >\r\n              {score.player}\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <div\r\n              style={{ color: '#ba9510', marginRight: '5px' }}\r\n              className=\"score\"\r\n            >\r\n              {score.banker}\r\n            </div>\r\n            <div className=\"banker\">BANKER</div>{' '}\r\n          </div>\r\n        </div>\r\n        <div className=\"cards\">\r\n          <div className=\"cards__item\">\r\n            <div className=\"card\">\r\n              {PlayerCards[0] ? (\r\n                <img src={require(`./img/${PlayerCards[0]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n            <div className=\"card\">\r\n              {PlayerCards[1] ? (\r\n                <img src={require(`./img/${PlayerCards[1]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n            <div className=\"card\">\r\n              {PlayerCards[2] ? (\r\n                <img src={require(`./img/${PlayerCards[2]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"cards__item\">\r\n            <div className=\"card\">\r\n              {BankerCards[0] ? (\r\n                <img src={require(`./img/${BankerCards[0]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n            <div className=\"card\">\r\n              {BankerCards[1] ? (\r\n                <img src={require(`./img/${BankerCards[1]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n            <div className=\"card\">\r\n              {BankerCards[2] ? (\r\n                <img src={require(`./img/${BankerCards[2]}.jpg`).default} />\r\n              ) : (\r\n                <img src={require(`./img/matsau.jpg`).default} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"options\">\r\n          <div className=\"options__center\">\r\n            <a\r\n              className={\r\n                sugges == 'Tier' && tik ? 'option wobble-bottom' : 'option'\r\n              }\r\n              rel=\"wobble-bottom\"\r\n              style={{ color: '#3cf24e' }}\r\n              onClick={() => {\r\n                handleClick('tie');\r\n                setPlay(false);\r\n              }}\r\n            >\r\n              TIE\r\n            </a>\r\n            <a\r\n              onClick={() => {\r\n                handleClick('Banker wins');\r\n                setPlay(false);\r\n              }}\r\n              style={{ color: 'yellow' }}\r\n              className={\r\n                sugges == 'Banker wins' ? 'option wobble-bottom' : 'option'\r\n              }\r\n            >\r\n              BANKER\r\n            </a>\r\n            <a\r\n              onClick={() => {\r\n                handleClick('Player wins');\r\n                setPlay(false);\r\n              }}\r\n              style={{ color: 'rgb(117, 35, 35)' }}\r\n              className={\r\n                sugges == 'Player wins' && tik\r\n                  ? 'option wobble-bottom'\r\n                  : 'option'\r\n              }\r\n            >\r\n              PLAYER\r\n            </a>\r\n          </div>\r\n\r\n          <div\r\n            className=\"start\"\r\n            onClick={() => {\r\n              setPlay(true);\r\n              notify();\r\n            }}\r\n          >\r\n            Start\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(App);\r\n","C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\Api.js",[],"C:\\Users\\buigi\\OneDrive\\Desktop\\BaccaratGame\\ViewGame\\src\\axios.js",[],["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":25,"column":10,"nodeType":"53","messageId":"54","endLine":25,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":54,"column":11,"nodeType":"53","messageId":"54","endLine":54,"endColumn":18},{"ruleId":"51","severity":1,"message":"56","line":95,"column":11,"nodeType":"53","messageId":"54","endLine":95,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":173,"column":17,"nodeType":"59","endLine":173,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":175,"column":17,"nodeType":"59","endLine":175,"endColumn":66},{"ruleId":"57","severity":1,"message":"58","line":180,"column":17,"nodeType":"59","endLine":180,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":182,"column":17,"nodeType":"59","endLine":182,"endColumn":66},{"ruleId":"57","severity":1,"message":"58","line":187,"column":17,"nodeType":"59","endLine":187,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":189,"column":17,"nodeType":"59","endLine":189,"endColumn":66},{"ruleId":"57","severity":1,"message":"58","line":196,"column":17,"nodeType":"59","endLine":196,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":198,"column":17,"nodeType":"59","endLine":198,"endColumn":66},{"ruleId":"57","severity":1,"message":"58","line":203,"column":17,"nodeType":"59","endLine":203,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":205,"column":17,"nodeType":"59","endLine":205,"endColumn":66},{"ruleId":"57","severity":1,"message":"58","line":210,"column":17,"nodeType":"59","endLine":210,"endColumn":77},{"ruleId":"57","severity":1,"message":"58","line":212,"column":17,"nodeType":"59","endLine":212,"endColumn":66},{"ruleId":"60","severity":1,"message":"61","line":219,"column":13,"nodeType":"59","endLine":229,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":221,"column":24,"nodeType":"64","messageId":"65","endLine":221,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":232,"column":13,"nodeType":"59","endLine":241,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":239,"column":24,"nodeType":"64","messageId":"65","endLine":239,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":244,"column":13,"nodeType":"59","endLine":255,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":251,"column":24,"nodeType":"64","messageId":"65","endLine":251,"endColumn":26},{"ruleId":"47","replacedBy":"66"},{"ruleId":"49","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'cookies' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","'Loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["68"],["69"],"no-global-assign","no-unsafe-negation"]